name: CI/CD Pipeline for Tasky

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/tasky .

      - name: Push Docker Image to Docker Hub
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/tasky ${{ secrets.DOCKER_USERNAME }}/tasky:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/tasky:latest

      - name: Clean up Old Containers
        run: |
          docker ps -aq -f name=tasky | xargs --no-run-if-empty docker rm -f

      - name: Run Container
        run: |
          docker run -d \
            -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            -e NEXT_PUBLIC_APP_URL="${{ secrets.NEXT_PUBLIC_APP_URL }}" \
            -e NEXTAUTH_SECRET="${{ secrets.NEXTAUTH_SECRET }}" \
            -e NEXTAUTH_URL="${{ secrets.NEXTAUTH_URL }}" \
            -e NEXTAUTH_SECRET_EXPIRES_IN="${{ secrets.NEXTAUTH_SECRET_EXPIRES_IN }}" \
            -p 3000:3000 \
            --name tasky \
            ${{ secrets.DOCKER_USERNAME }}/tasky:latest
          
      # - name: Debug KUBECONFIG
      #   run: |
      #     echo "KUBECONFIG: $KUBECONFIG"
      #     cat $KUBECONFIG
      #   env:
      #     KUBECONFIG: ${{ secrets.KUBECONFIG }}
          

      - name: Deploy to Kubernetes
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          echo "$KUBECONFIG" > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml
          kubectl apply -f k8s/configmap.yaml
          kubectl apply -f k8s/secret.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Verify Kubernetes Deployment
        run: |
          echo "Checking Kubernetes pods..."
          kubectl get pods
          echo "Checking Kubernetes services..."
          kubectl get svc
    
